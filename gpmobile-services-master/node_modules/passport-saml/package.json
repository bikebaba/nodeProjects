{
  "name": "passport-saml",
  "version": "0.0.4",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/bergie/passport-saml/raw/master/LICENSE"
    }
  ],
  "keywords": [
    "saml",
    "adfs",
    "sso",
    "shibboleth"
  ],
  "description": "SAML 2.0 authentication strategy for Passport",
  "author": {
    "name": "Henri Bergius",
    "email": "henri.bergius@iki.fi",
    "url": "http://bergie.iki.fi"
  },
  "contributors": [
    {
      "name": "Michael Bosworth"
    }
  ],
  "main": "./lib/passport-saml",
  "dependencies": {
    "passport": "0.1.x",
    "xml2js": "0.2.0",
    "xml-crypto": "0.0.x",
    "xmldom": "0.1.x"
  },
  "devDependencies": {
    "express": "2.5.x",
    "ejs": "0.7.x",
    "jshint": "*"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "Passport-SAML\r\n=============\r\n\r\nThis is a [SAML 2.0](http://en.wikipedia.org/wiki/SAML_2.0) authentication provider for [Passport](http://passportjs.org/), the Node.js authentication library.\r\n\r\nThe code was originally based on Michael Bosworth's [express-saml](https://github.com/bozzltron/express-saml) library.\r\n\r\nPassport-SAML has been tested to work with both [SimpleSAMLphp](http://simplesamlphp.org/) based Identity Providers, and with [Active Directory Federation Services](http://en.wikipedia.org/wiki/Active_Directory_Federation_Services).\r\n\r\n## Installation\r\n\r\n    $ npm install passport-saml\r\n\r\n## Usage\r\n\r\n### Configure strategy\r\n\r\nThis example utilizes the [Feide OpenIdp identity provider](https://openidp.feide.no/). You need an account there to log in with this. You also need to [register your site](https://openidp.feide.no/simplesaml/module.php/metaedit/index.php) as a service provider.\r\n\r\nThe SAML identity provider will redirect you to the URL provided by the `path` configuration.\r\n\r\n```javascript\r\npassport.use(new SamlStrategy(\r\n  {\r\n    path: '/login/callback',\r\n    entryPoint: 'https://openidp.feide.no/simplesaml/saml2/idp/SSOService.php',\r\n    issuer: 'passport-saml'\r\n  },\r\n  function(profile, done) {\r\n    findByEmail(profile.email, function(err, user) {\r\n      if (err) {\r\n        return done(err);\r\n      }\r\n      return done(null, user);\r\n    });\r\n  })\r\n));\r\n```\r\n\r\n### Provide the authentication callback\r\n\r\nYou need to provide a route corresponding to the `path` configuration parameter given to the strategy:\r\n\r\n```javascript\r\napp.post('/login/callback',\r\n  passport.authenticate('saml', { failureRedirect: '/', failureFlash: true }),\r\n  function(req, res) {\r\n    res.redirect('/');\r\n  }\r\n);\r\n```\r\n\r\n### Authenticate requests\r\n\r\nUse `passport.authenticate()`, specifying `saml` as the strategy:\r\n\r\n```javascript\r\napp.get('/login',\r\n  passport.authenticate('saml', { failureRedirect: '/', failureFlash: true }),\r\n  function(req, res) {\r\n    res.redirect('/');\r\n  }\r\n);\r\n```\r\n\r\n## Security and signatures\r\n\r\nPassport-SAML uses the HTTP Redirect Binding for its `AuthnRequest`s, and expects to receive the messages back via the HTTP POST binding.\r\n\r\nAuthentication requests sent by Passport-SAML can be signed using RSA-SHA1. To sign them you need to provide a private key in the PEM format via the `privateCert` configuration key. For example:\r\n\r\n```javascript\r\n    privateCert: fs.readFileSync('./cert.pem', 'utf-8')\r\n```\r\n\r\nIt is a good idea to validate the incoming SAML Responses. For this, you can provide the Identity Provider's certificate using the `cert` confguration key:\r\n\r\n```javascript\r\n    cert: 'MIICizCCAfQCCQCY8tKaMc0BMjANBgkqh ... W=='\r\n```\r\n\r\n## Usage with Active Directory Federation Services\r\n\r\nHere is a configuration that has been proven to work with ADFS:\r\n\r\n```javascript\r\n  {\r\n    entryPoint: 'https://ad.example.net/adfs/ls/',\r\n    issuer: 'https://your-app.example.net/login/callback',\r\n    callbackUrl: 'https://your-app.example.net/login/callback',\r\n    cert: 'MIICizCCAfQCCQCY8tKaMc0BMjANBgkqh ... W==',\r\n    identifierFormat: null\r\n  }\r\n```\r\n\r\nPlease note that ADFS needs to have a trust established to your service in order for this to work.\r\n",
  "readmeFilename": "README.md",
  "_id": "passport-saml@0.0.4",
  "_shasum": "df325f5ae587930885587973e3467bdd39ba37ca",
  "_resolved": "git://github.com/pawanvshah/passport-saml.git#8b7aa68571e34cbeb270021e862b62661ff3ebf9",
  "_from": "passport-saml@git://github.com/pawanvshah/passport-saml.git"
}
